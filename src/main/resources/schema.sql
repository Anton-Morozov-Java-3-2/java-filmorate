CREATE TABLE IF NOT EXISTS "mpa"
(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL
); -- таблица рейтингов

CREATE UNIQUE INDEX IF NOT EXISTS GENRE_UNIQUE ON "mpa" (name);

CREATE TABLE IF NOT EXISTS "film"
(
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,    
    name VARCHAR(100) NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date DATE NOT NULL,  
    duration INT NOT NULL,
    rate INT NOT NULL,
    mpa_id INT REFERENCES "mpa" (id)
); -- таблица фильмов

CREATE TABLE IF NOT EXISTS "user"
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,    
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    login VARCHAR(100) NOT NULL,    
    birthday DATE NOT NULL          
); -- таблица пользователей

CREATE TABLE IF NOT EXISTS "genre"
(
    genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,    
    name VARCHAR(100) NOT NULL    
); -- таблица жанров

CREATE UNIQUE INDEX IF NOT EXISTS GENRE_UNIQUE ON "genre" (name);

CREATE TABLE IF NOT EXISTS "film_genre"
(
    film_id BIGINT REFERENCES "film" (film_id),
    genre_id BIGINT REFERENCES "genre" (genre_id),
    PRIMARY KEY(film_id, genre_id)
); -- таблица соответствия жанров фильму

CREATE TABLE IF NOT EXISTS "like"
(
    film_id BIGINT REFERENCES "film" (film_id),
    user_id BIGINT REFERENCES "user" (user_id),
    PRIMARY KEY(film_id, user_id)
); -- таблица лайков

CREATE TABLE IF NOT EXISTS "friendship"
(
    sender_id BIGINT REFERENCES "user" (user_id),
    recipient_id BIGINT REFERENCES "user" (user_id),
    status VARCHAR(100) DEFAULT 'неподтверждённая',
    PRIMARY KEY(sender_id, recipient_id)
); -- таблица заявок в друзья





